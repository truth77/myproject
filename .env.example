# .env - Environment variables for the project
# Do not commit this file! Use .env.example as a template for others.
# Fill in sensitive values below.

# General
NODE_ENV=development  # 'development' or 'production'
APP_PORT=3000  # Backend API port inside the container (exposed via Nginx in prod)

# Database (PostgreSQL)
POSTGRES_USER=postgres  # Default user; change for production security
POSTGRES_PASSWORD=your_secure_password  # Use a strong, generated password
POSTGRES_DB=myproject_db
POSTGRES_HOST=postgres  # Docker service name
POSTGRES_PORT=5432
DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}  # Knex/ORM connection string

# Authentication/Secrets
JWT_SECRET=your_jwt_secret_here  # For JWT signing/verification
TOKEN_SECRET=your_token_secret_here  # Additional token secret (e.g., for sessions or CSRF)
CLIENT_ID=your_oauth_client_id  # OAuth client ID
CLIENT_SECRET=your_oauth_client_secret  # OAuth client secret
FACEBOOK_APP_ID=your_facebook_app_id  # From Facebook Developer Console
FACEBOOK_APP_SECRET=your_facebook_app_secret  # From Facebook Developer Console

# Payments (Stripe)
STRIPE_SECRET_KEY=your_stripe_secret_key  # From Stripe Dashboard (use test key in dev)
STRIPE_WEBHOOK_SECRET=your_stripe_webhook_secret  # For verifying webhook signatures

# Frontend/Client
REACT_APP_API_URL=http://localhost:3000/api  # Backend API base URL

# Production (SSL for Nginx)
# Mount your certs (e.g., from Let's Encrypt) into /etc/nginx/ssl/ via volumes in docker-compose.prod.yml
SSL_CERT_PATH=/etc/nginx/ssl/fullchain.pem
SSL_KEY_PATH=/etc/nginx/ssl/privkey.pem

# Logging/Debugging
DEBUG=false  # Set to true for verbose logs (e.g., in Express or Knex)
