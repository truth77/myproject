services:
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: bible-frontend
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://bible-backend:3000
      - NODE_OPTIONS=--max-old-space-size=2048
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=3002
      - WDS_SOCKET_HOST=localhost
      - WDS_SOCKET_PATH=/sockjs-node
      - WATCHPACK_POLLING=true
      - FAST_REFRESH=true
      - DISABLE_MEMORY_MONITORING=true
    ports:
      - "3002:3000"
    volumes:
      - ./client:/usr/app
      - /usr/app/node_modules
      - /usr/app/build
    working_dir: /usr/app
    command: sh -c "npm install && npm start"
    stdin_open: true
    tty: true
    networks:
      - bible-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3002"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 6G
        reservations:
          cpus: '1.0'
          memory: 4G

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: bible-backend
    env_file:
      - ./.env
    environment:
      NODE_ENV: development
      NODE_OPTIONS: --max-old-space-size=2048
      DB_HOST: bible-postgres
      DB_PORT: 5432
      DB_NAME: bible
      DB_USER: postgres
      DB_PASSWORD: C00kies$$$
      DATABASE_URL: postgresql://postgres:C00kies$$$@bible-postgres:5432/bible?schema=public
      SESSION_SECRET: your-session-secret
      FRONTEND_URL: http://localhost:3003
      JWT_SECRET: your-jwt-secret
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      STRIPE_PRODUCT_WEEKLY: ${STRIPE_PRODUCT_WEEKLY}
      STRIPE_PRODUCT_MONTHLY: ${STRIPE_PRODUCT_MONTHLY}
      STRIPE_PRODUCT_YEARLY: ${STRIPE_PRODUCT_YEARLY}
      STRIPE_PRODUCT_DONATION: ${STRIPE_PRODUCT_DONATION}
      REACT_APP_STRIPE_PUBLIC_KEY: ${REACT_APP_STRIPE_PUBLIC_KEY}
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          cpus: '3.0'
          memory: 3G
        reservations:
          cpus: '1.0'
          memory: 1G
    ports:
      - "3001:3000"
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bible-network

  postgres:
    image: postgres:15-alpine
    container_name: bible-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=C00kies$$$
      - POSTGRES_DB=bible
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d bible"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - bible-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

networks:
  bible-network:
    driver: bridge

volumes:
  postgres_data:
