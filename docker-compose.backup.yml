services:
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: bible-frontend
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://backend:3000
    ports:
      - "3002:3000"
    volumes:
      - ./client:/usr/app
      - /usr/app/node_modules
    networks:
      - bible-network
    stdin_open: true
    tty: true

  backend:
    build: 
      context: ./server
      dockerfile: Dockerfile
    container_name: bible-backend
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: bible
      DB_USER: postgres
      DB_PASSWORD: postgres
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/bible?schema=public
      SESSION_SECRET: your-session-secret
      FRONTEND_URL: http://localhost:3000
      JWT_SECRET: your-jwt-secret
      NODE_OPTIONS: --max-old-space-size=1024
    ports:
      - "3001:3000"
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    networks:
      - bible-network

  postgres:
    image: postgres:15-alpine
    container_name: bible-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bible
      POSTGRES_HOST_AUTH_METHOD: trust  # This allows passwordless connections
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - bible-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d bible"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  bible-network:
    driver: bridge

volumes:
  postgres_data:
