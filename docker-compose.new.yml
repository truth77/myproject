version: '3.8'

services:
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: bible-frontend
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:3001
    ports:
      - "3000:3000"
    networks:
      - bible-network
    depends_on:
      - backend

  backend:
    build: 
      context: ./server
      dockerfile: Dockerfile
    container_name: bible-backend
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/bible?schema=public
      - SESSION_SECRET=your-session-secret
      - FRONTEND_URL=http://localhost:3000
      - JWT_SECRET=your-jwt-secret
      - NODE_OPTIONS=--max-old-space-size=1024
    ports:
      - "3001:3000"
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    restart: always
    networks:
      - bible-network

  postgres:
    image: postgres:15-alpine
    container_name: bible-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=bible
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - bible-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  bible-network:
    driver: bridge

volumes:
  postgres_data:
