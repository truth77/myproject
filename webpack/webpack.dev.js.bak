const webpack = require('webpack');
const { merge } = require('webpack-merge');
const WebpackNotifierPlugin = require('webpack-notifier');
const commonConfig = require('./webpack.common.js');
const path = require('path');
const ReactRefreshWebpackPlugin = require('@pmmmwh/react-refresh-webpack-plugin');

module.exports = merge(commonConfig, {
    mode: 'development',
    devtool: 'cheap-module-eval-source-map',
    entry: [
        'core-js/stable',
        'regenerator-runtime/runtime',
        'webpack-hot-middleware/client?path=/__webpack_hmr&timeout=20000',
        path.resolve(__dirname, '../client/index.js')
    ],
    output: {
        path: path.resolve(__dirname, '../dist'),
        filename: 'bundle.js',
        publicPath: '/',
        clean: true
    },
    plugins: [
        new WebpackNotifierPlugin({
            alwaysNotify: true,
            excludeWarnings: true,
            skipFirstNotification: true
        }),
        new webpack.HotModuleReplacementPlugin(),
        new ReactRefreshWebpackPlugin({
            overlay: {
                sockIntegration: 'wds',
            },
        }),
        new webpack.DefinePlugin({
            'process.env.API_HOST': JSON.stringify('http://localhost:3001'),
            'process.env.NODE_ENV': JSON.stringify('development'),
            'process.env.BASE_URL': JSON.stringify('http://localhost:3002')
        }),
    ],
    devServer: {
        static: {
            directory: path.join(__dirname, '../client'),
            publicPath: '/',
            watch: true
        },
        historyApiFallback: {
            disableDotRule: true,
            index: '/'
        },
        hot: true,
        port: 3002,
        host: 'localhost',
        compress: true,
        open: true,
        proxy: [{
            context: ['/api', '/auth'],
            target: 'http://localhost:3001',
            secure: false,
            changeOrigin: true,
            logLevel: 'debug'
        }],
        client: {
            overlay: {
                errors: true,
                warnings: false,
            },
            logging: 'warn',
            progress: true,
            reconnect: 5,
            webSocketURL: 'ws://localhost:3002/ws',
        },
        devMiddleware: {
            publicPath: '/',
            writeToDisk: false,
        },
        headers: {
            'Access-Control-Allow-Origin': '*',
            'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, PATCH, OPTIONS',
            'Access-Control-Allow-Headers': 'X-Requested-With, content-type, Authorization',
        },
    },
});
